version: "3.9"
services:
  unit1:
    depends_on:
        - collector
    image: unit1
    command: python3.7 /home/factory.py 1 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  unit2:
    depends_on:
        - collector
    image: unit2
    command: python3.7 /home/factory.py 2 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  unit3:
    depends_on:
        - collector
    image: unit3
    command: python3.7 /home/factory.py 3 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  unit4:
    depends_on:
        - collector
    image: unit4
    command: python3.7 /home/factory.py 4 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  unit5:
    depends_on:
        - collector
    image: unit5
    command: python3.7 /home/factory.py 5 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  collector:
      depends_on:
          - db
      image: collector
      command: python3.7 /home/collector.py "${COLLECTOR_EXTERNAL_PORT}" "${WRITER_DOCKER_IP}" "${WRITER_EXTERNAL_PORT}" "${SOCKET_SIZE}"
      build: collector-docker/.
      ports:
          - "${COLLECTOR_EXTERNAL_PORT}"
      networks:
          au-bon-beurre-network:
              ipv4_address: "${COLLECTOR_DOCKER_IP}"
  writer:
      depends_on:
          - db
      image: writer
      command: python3 /home/writer.py "${WRITER_EXTERNAL_PORT}" "${DB_DOCKER_IP}" "${DB_EXTERNAL_PORT}" "${DB_DOCKER_NAME}" "root" "" "${SOCKET_SIZE}"
      build: writer-docker/.
      ports:
          - "${WRITER_EXTERNAL_PORT}"
      networks:
          au-bon-beurre-network:
              ipv4_address: "${WRITER_DOCKER_IP}"
  # db:
  #     image: mysql-db
  #     build: ./bdd-docker/.
  #     ports:
  #       - "${DB_EXTERNAL_PORT}:${DB_DOCKER_PORT}"
  #     environment:
  #       - MYSQL_ALLOW_EMPTY_PASSWORD= "yes"
  #     volumes:
  #       - db-data:/var/lib/mysql
  #     networks:
  #       static-network:
  #         ipv4_address: "${DB_DOCKER_IP}"
  # api:
  #   depends_on:
  #     - db
  #   image: express-api
  #   env_file:
  #     - ./.env
  #   build: ./api-docker/.
  #   restart: always
  #   ports:
  #     - "${API_EXTERNAL_PORT}:${API_DOCKER_PORT}"
  #   networks:
  #     - au-bon-beurre-network
  # front:
  #   depends_on:
  #     - api
  #   image: angular-app
  #   build: 
  #     dockerfile: ./front-docker/Dockerfile
  #     context: ./
  #   ports:
  #     - "${FRONT_EXTERNAL_PORT}:${FRONT_DOCKER_PORT}"
  #   networks:
  #     - au-bon-beurre-network
volumes:
  db-data:
networks:
  au-bon-beurre-network:
    driver: bridge
    ipam:
      config:
        - subnet: "${NETWORK_SUBNET_IP}"