version: "3.9"
services:
  db:
      image: mysql-db
      restart: always
      build: ./bdd-docker/.
      ports:
        - "${DB_EXTERNAL_PORT}:${DB_DOCKER_PORT}"
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD= "yes"
        - DB_DOCKER_PORT="${DB_DOCKER_PORT}"
      # volumes:
      #   - db-data:/var/lib/mysql/au_bon_beurre
      networks:
          au-bon-beurre-network:
              ipv4_address: "${DB_DOCKER_IP}"
  unit1:
    depends_on:
        - collector
    image: unit1
    restart: always
    command: python3.7 -u /home/factory.py 1 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  unit2:
    depends_on:
        - collector
    image: unit2
    restart: always
    command: python3.7 -u /home/factory.py 2 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  unit3:
    depends_on:
        - collector
    image: unit3
    restart: always
    command: python3.7 -u /home/factory.py 3 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  unit4:
    depends_on:
        - collector
    image: unit4
    restart: always
    command: python3.7 -u /home/factory.py 4 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  unit5:
    depends_on:
        - collector
    image: unit5
    restart: always
    command: python3.7 -u /home/factory.py 5 /home "${COLLECTOR_DOCKER_IP}" "${COLLECTOR_EXTERNAL_PORT}"
    build: units-docker/.
    networks:
      - au-bon-beurre-network
  collector:
      depends_on:
          - db
      image: collector
      command: python3.7 -u /home/collector.py "${COLLECTOR_EXTERNAL_PORT}" "${DB_DOCKER_IP}" "${DB_EXTERNAL_PORT}" "${DB_DOCKER_NAME}" "root" "" "${SOCKET_SIZE}"
      build: collector-docker/.
      ports:
          - "${COLLECTOR_EXTERNAL_PORT}"
      networks:
          au-bon-beurre-network:
              ipv4_address: "${COLLECTOR_DOCKER_IP}"
  api:
    depends_on:
      - db
    image: express-api
    env_file:
      - ./.env
    build: ./api-docker/.
    restart: always
    ports:
      - "${API_EXTERNAL_PORT}:${API_DOCKER_PORT}"
    environment:
      - PORT_TO_EXPOSE="${API_DOCKER_PORT}"
    networks:
      - au-bon-beurre-network
  front:
    depends_on:
      - api
    image: angular-app
    build: 
      dockerfile: ./front-docker/Dockerfile
      context: ./
    ports:
      - "${FRONT_EXTERNAL_PORT}:${FRONT_DOCKER_PORT}"
    environment:
      - FRONT_DOCKER_PORT="${FRONT_DOCKER_PORT}"
    networks:
      - au-bon-beurre-network
volumes:
  db-data:
networks:
  au-bon-beurre-network:
    driver: bridge
    ipam:
      config:
        - subnet: "${NETWORK_SUBNET_IP}"